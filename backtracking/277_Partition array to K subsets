/*
https://practice.geeksforgeeks.org/problems/partition-array-to-k-subsets/1
https://www.youtube.com/watch?v=90R1xPMPayU&ab_channel=GeeksforGeeksPractice
*/

class Solution{
  public:
    bool rec(int sum, int n, vector<int>& vis, int csum, int a[], int k){
        if(k == 1)
            return 1;
        if(csum > sum)
            return 0;
        
        if(csum == sum)
            return rec(sum, n, vis, 0, a, k - 1);
        
        for(int i = 0; i < n; i++){
            if(!vis[i]){
                vis[i] = 1;
                if(rec(sum, n, vis, csum + a[i], a, k))
                    return 1;
                vis[i] = 0;
            }
        }
        return 0;
    }
    bool isKPartitionPossible(int a[], int n, int k)
    {
         int sum = 0;
         for(int i = 0; i < n; i++)
            sum += a[i];
        
        if(sum%k != 0 || k > n)
            return 0;
            
         vector<int> vis(n, 0);
         sum /= k;
        
         return rec(sum, n, vis, 0, a, k);
    }
};
