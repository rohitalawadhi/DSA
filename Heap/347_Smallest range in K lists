/*
https://www.youtube.com/watch?v=mYDF7xsYmI4&ab_channel=GeeksforGeeksPractice
https://practice.geeksforgeeks.org/problems/find-smallest-range-containing-elements-from-k-lists/1
*/

class Solution{
    public:
    pair<int,int> findSmallestRange(int arr[][N], int n, int k)
    {
          priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>,
          greater<pair<int, pair<int, int>> > >  q;
          int mn = INT_MAX, mx = INT_MIN, range = INT_MAX;
          int low = 0, high = 0;
          for(int i = 0; i < k; i++){
              q.push({arr[i][0],{i, 0} } );
              mn = min(arr[i][0], mn);
              mx = max(arr[i][0], mx);
          }
          while(1){
              pair<int, pair<int, int> > temp = q.top();
              q.pop();
              int min1 = temp.first;
              if(range > mx - min1){
                  mn = min1;
                  low = mn;
                  high = mx;
                  range = mx - mn;
              }
              int i = temp.second.first;//array number
              int j = temp.second.second;//index
              
              if( j == n - 1)
                break;
            q.push({arr[i][j + 1], {i, j + 1}});
            if(mx < arr[i][j + 1])
                mx = arr[i][j + 1];
          }
          return {low, high};
    }
};
