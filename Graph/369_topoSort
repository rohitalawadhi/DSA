/*
https://practice.geeksforgeeks.org/problems/topological-sort/1
https://www.youtube.com/watch?v=QaI45-uf6iE&list=PLDdcY4olLQk066ysRibhoGd3UzGr0XSQG&index=10&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
*/
class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<int> in(V,0);
	    vector<int> ans;
	    queue<int> q;
	    for(int i = 0; i < V; i++){
	        for(auto x:adj[i]){
	            in[x]++;
	        }
	    }
	    for(int i = 0; i < V; i++){
	        if(in[i] == 0)
	            q.push(i);
	    }
	    
	    while(!q.empty()){
	        int td = q.front();
	        q.pop();
	        ans.push_back(td);
	        for(auto x:adj[td]){
	            in[x]--;
	            if(in[x] == 0)
	                q.push(x);
	        }
	    }
	    return ans;
	}
};
