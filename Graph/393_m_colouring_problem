/*
https://www.geeksforgeeks.org/graph-coloring-applications/
https://practice.geeksforgeeks.org/problems/m-coloring-problem-1587115620/1
https://www.youtube.com/watch?v=h9M0pQ39ha0&list=PLDdcY4olLQk066ysRibhoGd3UzGr0XSQG&index=18&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
https://www.youtube.com/watch?v=porShXfpPqA&list=PLDdcY4olLQk066ysRibhoGd3UzGr0XSQG&index=25&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
*/

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int v, e, m;
    cin>>v>>e>>m;
    vector<vector<int> > g(v);
    for(int i = 0; i < e; i++){
        int x, y;
        cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    
    int res[v];
    bool available[v];
    res[0] = 0;
    for(int i = 1; i < v; i++) res[i] = -1;
    for(int i = 0; i < v; i++) available[i] = false;
    int cn = 0;
    for(int i = 1; i < v; i++){
        for(auto x:g[i]){
            if(res[x] != -1){
                available[res[x]] = true;
            }
        }
        int cr ;
        for(cr = 0; cr < v; cr++){
            if(available[cr] == false){
                break;
            }
        }
        
        res[i] = cr;
        cn = max(cn, cr + 1);
        
        for(auto x:g[i]){
            if(res[i] != -1){
                available[res[x]] = false;
            }
        }
        
    }
    
    cout<<cn<<endl;
    if(cn == m)
        cout<<"true";
    else
        cout<<"false";
    for(int i = 0; i < v; i++){
        cout<<res[i]<<" ";
    }

    return 0;
}
