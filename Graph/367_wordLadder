/*

https://practice.geeksforgeeks.org/problems/word-ladder/1
https://www.youtube.com/watch?v=jvTa0t3-GQo&list=PLDdcY4olLQk066ysRibhoGd3UzGr0XSQG&index=11&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
*/


class Solution {
public:
    int wordLadderLength(string start, string end, vector<string>& wordList) {
       queue<string> q;
       q.push(start);
       int wordSize = start.size();
       
       unordered_set<string> word;
       for(int i = 0; i < wordList.size(); i++){
           word.insert(wordList[i]);
       }
       if(word.find(end) == word.end())
         return 0;
       
       int len = 0;
       while(!q.empty()){
           len++;
           int qlen = q.size();
           for(int i = 0; i < qlen; i++){
               string s = q.front();
               q.pop();
               for(int j = 0; j < wordSize; j++){
                   char org = s[j];
                   for(char ch = 'a'; ch <= 'z'; ch++){
                       s[j] = ch;
                       if(s == end)
                         return len + 1;
                       if(word.find(s) == word.end())
                         continue;
                        word.erase(s);
                        q.push(s);
                   }
                   s[j] = org;
               }
           }
       }
    
    return 0;
    }
};
