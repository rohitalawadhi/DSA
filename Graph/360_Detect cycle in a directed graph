/*

https://www.youtube.com/watch?v=1u2VLzBhJZU&list=PLDdcY4olLQk066ysRibhoGd3UzGr0XSQG&index=4&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1
*/

class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool solve(int src, vector<int> &vis, vector<int> &order, vector<int> adj[]){
        vis[src] = 1;
        order[src] = 1;
        for(auto x:adj[src]){
            if(!vis[x]){
                bool conf = solve(x, vis, order, adj);
                if(conf)
                    return true;
            }
            else if(order[x])
                return true;
        }
        order[src] = 0;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int> vis(V,0);
        vector<int> order(V,0);
        for(int i = 0; i < V; i++)
        {
            if(!vis[i]){
                bool c = solve(i, vis, order, adj);
                if(c)
                return true;
            }
        }
        return false;
    }
};
