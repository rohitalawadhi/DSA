// https://practice.geeksforgeeks.org/problems/longest-common-subsequence-1587115620/1
// https://www.youtube.com/watch?v=y1b8pObvndA&t=905s&ab_channel=CodeHelp-byBabbar
class Solution
{
    public:
    //Function to find the length of longest common subsequence in two strings.
    int solve( string &a, string& b, int i, int j , vector<vector<int> > &dp){
        if(i == a.length())
            return 0;
        if(j == b.length())
            return 0;
        
        if(dp[i][j] != -1)
            return dp[i][j];
            
        int ans = 0;
        if(a[i] == b[j]){
            ans = 1 + solve(a, b, i + 1, j + 1, dp);
        }
        else{
            ans = max(solve(a, b, i + 1, j, dp), solve(a, b, i, j + 1, dp));
        }
        return dp[i][j] = ans;
    }
    int lcs(int n, int m, string s1, string s2)
    {
        vector<vector<int> > dp(s1.length(), vector<int>(s2.length(), -1));
        return solve(s1, s2, 0, 0 , dp);
    }
};
