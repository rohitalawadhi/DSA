//https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/
// https://www.youtube.com/watch?v=UmJT3j26t1I&ab_channel=takeUforward
class Solution {
public:
    TreeNode* build(vector<int> &A, int& i, int bound){
        if(i == A.size() || A[i] > bound)
            return NULL;
        
        TreeNode * root = new TreeNode(A[i++]);
        root->left = build(A, i, root->val);
        root->right = build(A, i, bound);
        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int i = 0;
        return build(preorder, i, INT_MAX);
    }
};
