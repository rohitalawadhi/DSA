/*
https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1
https://www.youtube.com/watch?v=UGY7FMHt-M8&ab_channel=CodeHelp-byBabbar
*/


class Solution{
public:
    bool solveMem(int index, int arr[], int N, int target, vector<vector<int> >& dp){
        if(index >= N)
            return 0;
        if(target < 0)
            return 0;
        if(target == 0)
            return 1;
        if(dp[index][target] != -1)
            return dp[index][target];
        bool incl = solveMem(index + 1, arr, N, target - arr[index], dp);
        bool excl = solveMem(index + 1, arr, N, target - 0, dp);
        
        return dp[index][target] = incl or excl;
    }
    int equalPartition(int N, int arr[])
    {
        int total = 0;
        for(int i = 0; i < N; i++)
            total += arr[i];
        
        if(total & 1)
            return 0;
        
        int target = total / 2;
        
        vector<vector<int> > dp(N, vector<int>(target + 1, -1));
        return solveMem(0, arr, N, target, dp);
    }
};
