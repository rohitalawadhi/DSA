
// https://practice.geeksforgeeks.org/problems/lcs-of-three-strings0028/1

// https://www.youtube.com/watch?v=gHGezjg2yG4&ab_channel=GeeksforGeeksPractice

int dp[101][101][101];
int LCS(string &s1, string &s2, string &s3, int i, int j, int k){
    if(i == 0 or j == 0 or k == 0)
        return 0;
    
    if(dp[i][j][k] != -1)
        return dp[i][j][k];
    
    if(s1[i - 1] == s2[j - 1] and s2[j - 1] == s3[k - 1])
        return dp[i][j][k] = 1 + LCS(s1, s2, s3, i - 1, j - 1, k - 1); 
    int l = LCS(s1, s2 , s3, i - 1, j, k);
    int r = LCS(s1, s2 , s3, i, j - 1, k);
    int p = LCS(s1, s2 , s3, i, j, k - 1);
    int a = LCS(s1, s2 , s3, i - 1, j - 1, k);
    int b = LCS(s1, s2 , s3, i, j - 1, k - 1);
    int c = LCS(s1, s2 , s3, i - 1, j, k - 1);
    
    return  dp[i][j][k] =  max({l, r, p, a, b, c});
}
int LCSof3 (string s1, string s2, string s3, int n1, int n2, int n3)
{
    //vector<vector<vector<int> > > dp(n1, vector<vector<int>> (n2, vector<int>(n3, -1)));
    memset(dp, -1, sizeof(dp));
    return LCS(s1, s2, s3, n1, n2, n3);
    // your code here
}
