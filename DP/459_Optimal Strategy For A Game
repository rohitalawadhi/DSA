/*
https://practice.geeksforgeeks.org/problems/optimal-strategy-for-a-game-1587115620/1

Optimal Strategy For A Game
*/
class Solution{
    public:
    int dp[1001][1001];
    int solve(int i, int j, int a[]){
        if(i > j)
            return 0;
        if(dp[i][j] != -1)
            return dp[i][j];
        
        return dp[i][j] = max( ( a[i] + min( solve(i + 2, j, a), solve(i + 1, j - 1, a) ) ),
                                ( a[j] + min( solve(i, j - 2, a), solve(i + 1, j - 1, a) ) ) );
    }
    long long maximumAmount(int a[], int n){
       dp[n][n];
       memset(dp, -1, sizeof(dp));
       return solve(0, n - 1, a);
    }
};
