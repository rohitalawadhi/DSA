// https://practice.geeksforgeeks.org/problems/palindromic-patitioning4845/1
// https://www.youtube.com/watch?v=wMoOpnihXJY
class Solution{
public:
    int palindromicPartition(string str)
    {
        int n = str.length();
        bool pal[n][n];
        for(int i = 0; i < n; i++)
            pal[i][i] = true;
        
        for(int len = 2; len <= n; len++){
            for(int i = 0; i < n - len + 1; i++){
                int j = i + len - 1;
                if(len == 2){
                    if(str[i] == str[j])
                        pal[i][j] = true;
                    else
                        pal[i][j] = false;
                }
                else{
                    if(str[i] == str[j] and pal[i + 1][j - 1])
                        pal[i][j] = true;
                    else
                        pal[i][j] = false;
                }
            }
        }
        long long int cuts[n];
        for(int i = 0 ; i < n; i++){
            if(pal[0][i] == true)
                cuts[i] = 0;
            else{
                cuts[i] = INT_MAX;
                for(int j = 0; j < i; j++){
                    if(pal[j + 1][i] == true)
                        cuts[i] = min(cuts[i], cuts[j] + 1);
                }
            }
        }
        return cuts[n - 1];
    }
};
