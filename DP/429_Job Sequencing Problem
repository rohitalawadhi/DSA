// https://www.youtube.com/watch?v=V59YYFPN5KA&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
// https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1?utm_source=geeksforgeeks&utm_medium=ml_article_practice_tab&utm_campaign=article_practice_tab

class Solution 
{
    public:
    static bool comp(Job a, Job b){
        return a.profit > b.profit;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr, arr + n , comp);
        int day = 0, profit = 0;
        bool done[n] = {0};
        for(int i = 0; i<n; i++){
            for(int j = min(n, arr[i].dead - 1); j >=0; j--)
            {
                if(done[j] == false){
                    day = day + 1;
                    profit = profit + arr[i].profit;
                    done[j] = true;
                    break;
                }
            }
        }
        return {day, profit};
    } 
};
