// https://www.youtube.com/watch?v=v3qlwj6c-ds&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
// https://practice.geeksforgeeks.org/problems/finding-the-numbers0215/1
class Solution
{
public:
    vector<int> singleNumber(vector<int> nums) 
    {
        vector<int> ans;
        int n = nums.size();
        int XOR = nums[0];
        for(int i = 1; i < n; i++){
            XOR = XOR ^ nums[i];
        }
        int right_bit = XOR & ~(XOR - 1);
        int x = 0, y = 0;
        for(int i = 0; i < n; i++){
            if(nums[i] & right_bit){
                x = x ^ nums[i];
            }
            else{
                y = y ^ nums[i];
            }
        }
        ans.push_back(x);
        ans.push_back(y);
        sort(ans.begin(), ans.end());
        return ans;
    }
};
