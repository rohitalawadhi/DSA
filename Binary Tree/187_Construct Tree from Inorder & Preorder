// https://www.youtube.com/watch?v=IH9jN6VdMOc&list=PLDdcY4olLQk1-yJxgljSQ4ykbI2Bw1CqS&index=16&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
// https://practice.geeksforgeeks.org/problems/construct-tree-1/1

class Solution{
    public:
    
    int find(int in[], int start, int end, int ele){
        for(int i=start; i<=end; i++){
            if(in[i]==ele) return i;
        }
        
        return -1;
        
    }
    
    Node* func(int in[], int pre[], int &index, int inorderstart, int inorderend, int n){
        if(index>=n || inorderstart>inorderend){
            return NULL;
        }
        
        int element= pre[index++];
        Node* root= new Node(element);
        
        int position= find(in, inorderstart, inorderend, element);
        
        root->left= func(in, pre, index, inorderstart, position-1, n);
        root->right= func(in, pre, index, position+1, inorderend, n);
        
        return root;
        
        
    }
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here
        
        int preorderindex=0;
        
        Node* ans= func(in, pre, preorderindex, 0, n-1, n);
        
        //n->nodes, 0 -> inorder array ka start, n-1 ->inorder array ka end
        
        return ans;
        
    }
};
