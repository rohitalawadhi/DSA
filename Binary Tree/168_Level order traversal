
// https://github.com/viren-sureja/Love-Babbar-450/blob/master/06_binary_trees/01_level_order_traversal.cpp

// https://practice.geeksforgeeks.org/problems/level-order-traversal/1

class Solution
{
    public:
    //Function to return the level order traversal of a tree.
    vector<int> levelOrder(Node* root)
    {
        vector<int> ans;
        if (root == NULL)  return ans;
        
        // Create an empty queue for level order traversal
        queue<Node*> q;
    
        // Enqueue Root and initialize height
        q.push(root);
    
        while (q.empty() == false)
        {
            // Print front of queue and remove it from queue
            Node* node = q.front();
            ans.push_back(node->data);
            q.pop();
    
            /* Enqueue left child */
            if (node->left != NULL)
                q.push(node->left);
    
            /*Enqueue right child */
            if (node->right != NULL)
                q.push(node->right);
        }
        return ans;
    }
};
