
// https://practice.geeksforgeeks.org/problems/brothers-from-different-root/1
// https://www.youtube.com/watch?v=h7uGc48yb14&ab_channel=Yogesh%26Shailesh%28CodeLibrary%29
class Solution
{
public:
int c;
bool fetch(Node * root2, int k ){
    if(!root2)
        return false;
    
    if(k == root2->data)
        return true;
    
    bool x = false, y = false;  
    if(k < root2->data)
        x = fetch(root2->left, k);
    else if(k > root2->data)
        y = fetch(root2->right, k);
    return x or y;
}
void solve(Node* root1, Node * root2, int k){
    if(root1 == NULL)
        return;
        solve(root1->left, root2, k);
        if(fetch(root2, k - root1->data)) c++;
        solve(root1->right, root2, k);
}
    int countPairs(Node* root1, Node* root2, int x)
    {
        c = 0;
        solve(root1, root2, x);
        return c;
    }
};
