// https://practice.geeksforgeeks.org/problems/kth-ancestor-in-a-tree/1?utm_source=geeksforgeeks&utm_medium=ml_article_practice_tab&utm_campaign=article_practice_tab

Node* solve(Node* root, int &k, int node)
{
    if(root == NULL)
    {
        return NULL;
    }
    
    if(root->data == node)
    {
        return root;
    }
    
    Node* left = solve(root->left, k, node);
    Node* right = solve(root->right, k, node);
    
    if(left != NULL && right == NULL)
    {
        k--;
        if(k<=0)
        {
            k = INT_MAX;
            return root;
        }
        return left;
    }
    
    if(right != NULL && left == NULL)
    {
        k--;
        if(k<=0)
        {
            k = INT_MAX;
            return root;
        }
        return right;
    }
}
int kthAncestor(Node *root, int k, int node)
{
    Node* ans = solve(root, k, node);
    if(ans == NULL || ans->data == node)
        return -1;
    else
        return ans->data;
    
}
